<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JABBI CHAT</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
  <style>
    body {
      margin: 0;
      background: #0d0d0d;
      font-family: 'Segoe UI', sans-serif;
      color: #fff;
      max-width: 450px;
      margin: auto;
    }
    .hidden { display: none; }
    .login, .register, .home, .chat, .edit-profile, .admin {
      padding: 20px;
    }
    input, .send-input {
      width: 100%;
      padding: 12px;
      margin-bottom: 10px;
      border-radius: 8px;
      border: none;
      outline: none;
      font-size: 16px;
    }
    .btn {
      background: #00aaff;
      color: #fff;
      padding: 12px;
      text-align: center;
      border-radius: 8px;
      cursor: pointer;
      font-size: 16px;
    }
    .link-btn {
      text-align: center;
      color: #0af;
      margin-top: 10px;
      cursor: pointer;
      font-size: 14px;
    }
    .header {
      font-size: 20px;
      font-weight: bold;
      padding-bottom: 10px;
      border-bottom: 1px solid #222;
    }
    .chat-list .user {
      display: flex;
      align-items: center;
      padding: 10px;
      border-bottom: 1px solid #222;
      cursor: pointer;
    }
    .chat-list .user:hover { background: #1a1a1a; }
    .chat-list img {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      margin-right: 10px;
    }
    .chat-list .name {
      font-weight: bold;
    }
    .chat-screen {
      display: flex;
      flex-direction: column;
      height: 70vh;
      overflow-y: scroll;
      padding-bottom: 60px;
    }
    .message {
      max-width: 60%;
      margin: 10px;
      padding: 10px;
      border-radius: 10px;
      position: relative;
      word-wrap: break-word;
    }
    .from-me {
      align-self: flex-end;
      background: #007aff;
    }
    .from-them {
      align-self: flex-start;
      background: #2a2a2a;
    }
    .timestamp {
      font-size: 10px;
      margin-top: 5px;
      text-align: right;
    }
    .status {
      font-size: 10px;
      text-align: right;
      color: #0af;
    }
    .send-box {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: #0d0d0d;
      padding: 10px;
      display: flex;
    }
    .send-input {
      flex-grow: 1;
      margin-right: 5px;
    }
    .back-btn {
      margin-bottom: 10px;
      display: inline-block;
      color: #0af;
      cursor: pointer;
    }
  </style>
</head>
<body>

<!-- Login Section -->
<div class="login">
  <h2>Login to JABBI CHAT</h2>
  <input type="email" id="email" placeholder="Email" />
  <input type="password" id="password" placeholder="Password" />
  <div class="btn" onclick="login()">Login</div>
  <div class="link-btn" onclick="showRegister()">Don't have an account? Create one</div>
</div>

<!-- Register Section -->
<div class="register hidden">
  <h2>Create Account</h2>
  <input type="text" id="regName" placeholder="Full Name" />
  <input type="email" id="regEmail" placeholder="Email" />
  <input type="password" id="regPassword" placeholder="Password" />
  <input type="text" id="regPic" placeholder="Profile Pic URL (optional)" />
  <div class="btn" onclick="register()">Create Account</div>
  <div class="link-btn" onclick="showLogin()">Already have an account? Login</div>
</div>

<!-- Home Section -->
<div class="home hidden">
  <div class="header">
    Chats
    <input type="text" id="searchInput" placeholder="Search users..." oninput="renderChats()" style="width: 100%; margin-top: 10px; background: #1a1a1a; color: white; border: none; padding: 10px; border-radius: 8px;">
    <div class="btn" style="margin-top: 10px;" onclick="editProfile()">Edit Profile</div>
  </div>
  <div class="chat-list" id="chatList"></div>
</div>

<!-- Chat Section -->
<div class="chat hidden">
  <div class="back-btn" onclick="goBack()">‚Üê Back</div>
  <div class="header" id="chatWith"></div>
  <div class="chat-screen" id="chatScreen"></div>
  <div class="send-box">
    <input type="text" class="send-input" id="msgInput" placeholder="Type a message..." />
    <div class="btn" onclick="sendMsg()">Send</div>
  </div>
</div>

<!-- Edit Profile Section -->
<div class="edit-profile hidden">
  <div class="back-btn" onclick="goBackFromEdit()">‚Üê Back</div>
  <div class="header">Edit Profile</div>
  <input type="text" id="editName" placeholder="Your Name" />
  <input type="password" id="editPassword" placeholder="New Password" />
  <input type="text" id="editPic" placeholder="Profile Pic URL" />
  <div class="btn" onclick="saveProfile()">Save Changes</div>
</div>

<!-- Admin Panel Section -->
<div class="admin hidden">
  <div class="header">Admin Panel</div>
  <div class="back-btn" onclick="logoutAdmin()">‚Üê Logout</div>
  <div id="adminList" style="margin-top: 20px;"></div>
</div>

<script>
  const defaultUsers = {
    "bencasio666@gmail.com": {
      password: "12345",
      name: "Emmanuel",
      pic: "https://randomuser.me/api/portraits/men/45.jpg"
    },
    "stephenemmanuel10001@gmail.com": {
      password: "12345",
      name: "Daniel",
      pic: "https://randomuser.me/api/portraits/men/10.jpg"
    }
  };

  if (!localStorage.getItem("users")) {
    localStorage.setItem("users", JSON.stringify(defaultUsers));
  }

  let currentUser = null;
  let chattingWith = null;
  const adminEmail = "bencasio6666@gmail.com";
  const adminPassword = "177234";

  function showRegister() {
    document.querySelector('.login').classList.add('hidden');
    document.querySelector('.register').classList.remove('hidden');
  }

  function showLogin() {
    document.querySelector('.register').classList.add('hidden');
    document.querySelector('.login').classList.remove('hidden');
  }

  function register() {
    const name = document.getElementById('regName').value.trim();
    const email = document.getElementById('regEmail').value.trim();
    const pass = document.getElementById('regPassword').value.trim();
    const pic = document.getElementById('regPic').value.trim() || `https://i.pravatar.cc/150?u=${email}`;
    if (!name || !email || !pass) return alert("Fill all fields");
    let users = JSON.parse(localStorage.getItem("users") || "{}");
    if (users[email]) return alert("User already exists");
    users[email] = { name, password: pass, pic };
    localStorage.setItem("users", JSON.stringify(users));
    alert("Account created! Please log in.");
    showLogin();
  }

  function login() {
    const email = document.getElementById('email').value.trim();
    const pass = document.getElementById('password').value.trim();
    let users = JSON.parse(localStorage.getItem("users") || "{}");

    if (email === adminEmail && pass === adminPassword) {
      currentUser = email;
      document.querySelector('.login').classList.add('hidden');
      document.querySelector('.admin').classList.remove('hidden');
      renderAdminPanel();
      return;
    }

    if (users[email] && users[email].password === pass) {
      currentUser = email;
      document.querySelector('.login').classList.add('hidden');
      document.querySelector('.home').classList.remove('hidden');
      renderChats();
    } else {
      alert("Invalid login");
    }
  }

  function logoutAdmin() {
    currentUser = null;
    document.querySelector('.admin').classList.add('hidden');
    document.querySelector('.login').classList.remove('hidden');
  }

  function renderAdminPanel() {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    const adminList = document.getElementById('adminList');
    adminList.innerHTML = '';

    for (let email in users) {
      if (email !== adminEmail) {
        const user = users[email];
        const isVerified = user.verified ? "üéñÔ∏è" : "";
        adminList.innerHTML += `
          <div style="margin-bottom: 10px; padding: 10px; background: #1a1a1a; border-radius: 8px;">
            <img src="${user.pic}" style="width:40px;height:40px;border-radius:50%;vertical-align:middle;margin-right:10px;">
            <strong>${user.name}</strong> ${isVerified}<br>
            <small>${email}</small><br>
            <button onclick="toggleVerification('${email}')" style="margin-top: 5px; padding: 6px 12px; border: none; border-radius: 6px; background: #00aaff; color: white;">
              ${user.verified ? "Remove Verification" : "Verify User"}
            </button>
          </div>
        `;
      }
    }
  }

  function toggleVerification(email) {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    if (users[email]) {
      users[email].verified = !users[email].verified;
      localStorage.setItem("users", JSON.stringify(users));
      renderAdminPanel();
    }
  }

  function renderChats() {
    const list = document.getElementById('chatList');
    const search = document.getElementById('searchInput')?.value?.toLowerCase() || "";
    list.innerHTML = '';
    const users = JSON.parse(localStorage.getItem("users") || "{}");

    for (let email in users) {
      if (email !== currentUser) {
        const user = users[email];
        if (user.name.toLowerCase().includes(search)) {
          const verified = user.verified ? " üéñÔ∏è" : "";
          list.innerHTML += `
            <div class="user" onclick="openChat('${email}')">
              <img src="${user.pic}" />
              <div>
                <div class="name">${user.name}${verified}</div>
                <div class="sub">Tap to chat</div>
              </div>
            </div>
          `;
        }
      }
    }
  }

  function openChat(email) {
    chattingWith = email;
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    document.querySelector('.home').classList.add('hidden');
    document.querySelector('.chat').classList.remove('hidden');
    document.getElementById('chatWith').innerText = users[email].name;
    loadMessages();
  }

  function goBack() {
    document.querySelector('.chat').classList.add('hidden');
    document.querySelector('.home').classList.remove('hidden');
  }

  function sendMsg() {
    const input = document.getElementById('msgInput');
    const msg = input.value.trim();
    if (!msg) return;
    const key = `${currentUser}_${chattingWith}`;
    const messages = JSON.parse(localStorage.getItem(key) || "[]");
    messages.push({ from: currentUser, text: msg, time: new Date().toLocaleTimeString() });
    localStorage.setItem(key, JSON.stringify(messages));
    input.value = '';
    loadMessages();
  }

  function loadMessages() {
    const screen = document.getElementById('chatScreen');
    screen.innerHTML = '';
    const key1 = `${currentUser}_${chattingWith}`;
    const key2 = `${chattingWith}_${currentUser}`;
    const msgs1 = JSON.parse(localStorage.getItem(key1) || "[]");
    const msgs2 = JSON.parse(localStorage.getItem(key2) || "[]");
    const all = [...msgs1, ...msgs2].sort((a, b) => new Date('1970/01/01 ' + a.time) - new Date('1970/01/01 ' + b.time));
    for (let msg of all) {
      const mine = msg.from === currentUser;
      screen.innerHTML += `
        <div class="message ${mine ? 'from-me' : 'from-them'}">
          ${msg.text}
          <div class="timestamp">${msg.time}</div>
          ${mine ? '<div class="status">‚úì‚úì</div>' : ''}
        </div>
      `;
    }
    screen.scrollTop = screen.scrollHeight;
  }

  function editProfile() {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    const user = users[currentUser];
    if (!user) return alert("No user found");

    document.querySelector('.home').classList.add('hidden');
    document.querySelector('.edit-profile').classList.remove('hidden');

    document.getElementById('editName').value = user.name;
    document.getElementById('editPassword').value = user.password;
    document.getElementById('editPic').value = user.pic;
  }

  function saveProfile() {
    const name = document.getElementById('editName').value.trim();
    const password = document.getElementById('editPassword').value.trim();
    const pic = document.getElementById('editPic').value.trim();

    if (!name || !password) return alert("Name and password required");

    const users = JSON.parse(localStorage.getItem("users") || "{}");
    users[currentUser].name = name;
    users[currentUser].password = password;
    users[currentUser].pic = pic || `https://i.pravatar.cc/150?u=${currentUser}`;

    localStorage.setItem("users", JSON.stringify(users));
    alert("Profile updated successfully");

    goBackFromEdit();
    renderChats();
  }

  function goBackFromEdit() {
    document.querySelector('.edit-profile').classList.add('hidden');
    document.querySelector('.home').classList.remove('hidden');
  }
</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JABBI CHAT</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
  <style>
    body {
      margin: 0;
      background: #0d0d0d;
      font-family: 'Segoe UI', sans-serif;
      color: #fff;
      max-width: 450px;
      margin: auto;
    }
    .hidden { display: none; }
    .login, .register, .home, .chat, .edit-profile, .admin {
      padding: 20px;
    }
    input, .send-input {
      width: 100%;
      padding: 12px;
      margin-bottom: 10px;
      border-radius: 8px;
      border: none;
      outline: none;
      font-size: 16px;
    }
    .btn {
      background: #00aaff;
      color: #fff;
      padding: 12px;
      text-align: center;
      border-radius: 8px;
      cursor: pointer;
      font-size: 16px;
    }
    .link-btn {
      text-align: center;
      color: #0af;
      margin-top: 10px;
      cursor: pointer;
      font-size: 14px;
    }
    .header {
      font-size: 20px;
      font-weight: bold;
      padding-bottom: 10px;
      border-bottom: 1px solid #222;
    }
    .chat-list .user {
      display: flex;
      align-items: center;
      padding: 10px;
      border-bottom: 1px solid #222;
      cursor: pointer;
    }
    .chat-list .user:hover { background: #1a1a1a; }
    .chat-list img {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      margin-right: 10px;
    }
    .chat-list .name {
      font-weight: bold;
    }
    .chat-screen {
      display: flex;
      flex-direction: column;
      height: 70vh;
      overflow-y: scroll;
      padding-bottom: 60px;
    }
    .message {
      max-width: 60%;
      margin: 10px;
      padding: 10px;
      border-radius: 10px;
      position: relative;
      word-wrap: break-word;
    }
    .from-me {
      align-self: flex-end;
      background: #007aff;
    }
    .from-them {
      align-self: flex-start;
      background: #2a2a2a;
    }
    .timestamp {
      font-size: 10px;
      margin-top: 5px;
      text-align: right;
    }
    .status {
      font-size: 10px;
      text-align: right;
      color: #0af;
    }
    .send-box {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: #0d0d0d;
      padding: 10px;
      display: flex;
    }
    .send-input {
      flex-grow: 1;
      margin-right: 5px;
    }
    .back-btn {
      margin-bottom: 10px;
      display: inline-block;
      color: #0af;
      cursor: pointer;
    }
  </style>
</head>
<body>

<!-- Login Section -->
<div class="login">
  <h2>Login to JABBI CHAT</h2>
  <input type="email" id="email" placeholder="Email" />
  <input type="password" id="password" placeholder="Password" />
  <div class="btn" onclick="login()">Login</div>
  <div class="link-btn" onclick="showRegister()">Don't have an account? Create one</div>
</div>

<!-- Register Section -->
<div class="register hidden">
  <h2>Create Account</h2>
  <input type="text" id="regName" placeholder="Full Name" />
  <input type="email" id="regEmail" placeholder="Email" />
  <input type="password" id="regPassword" placeholder="Password" />
  <input type="text" id="regPic" placeholder="Profile Pic URL (optional)" />
  <div class="btn" onclick="register()">Create Account</div>
  <div class="link-btn" onclick="showLogin()">Already have an account? Login</div>
</div>

<!-- Home Section -->
<div class="home hidden">
  <div class="header">
    Chats
    <input type="text" id="searchInput" placeholder="Search users..." oninput="renderChats()" style="width: 100%; margin-top: 10px; background: #1a1a1a; color: white; border: none; padding: 10px; border-radius: 8px;">
    <div class="btn" style="margin-top: 10px;" onclick="editProfile()">Edit Profile</div>
  </div>
  <div class="chat-list" id="chatList"></div>
</div>

<!-- Chat Section -->
<div class="chat hidden">
  <div class="back-btn" onclick="goBack()">‚Üê Back</div>
  <div class="header" id="chatWith"></div>
  <div class="chat-screen" id="chatScreen"></div>
  <div class="send-box">
    <input type="text" class="send-input" id="msgInput" placeholder="Type a message..." />
    <div class="btn" onclick="sendMsg()">Send</div>
  </div>
</div>

<!-- Edit Profile Section -->
<div class="edit-profile hidden">
  <div class="back-btn" onclick="goBackFromEdit()">‚Üê Back</div>
  <div class="header">Edit Profile</div>
  <input type="text" id="editName" placeholder="Your Name" />
  <input type="password" id="editPassword" placeholder="New Password" />
  <input type="text" id="editPic" placeholder="Profile Pic URL" />
  <div class="btn" onclick="saveProfile()">Save Changes</div>
</div>

<!-- Admin Panel Section -->
<div class="admin hidden">
  <div class="header">Admin Panel</div>
  <div class="back-btn" onclick="logoutAdmin()">‚Üê Logout</div>
  <div id="adminList" style="margin-top: 20px;"></div>
</div>

<script>
  const defaultUsers = {
    "bencasio666@gmail.com": {
      password: "12345",
      name: "Emmanuel",
      pic: "https://randomuser.me/api/portraits/men/45.jpg"
    },
    "stephenemmanuel10001@gmail.com": {
      password: "12345",
      name: "Daniel",
      pic: "https://randomuser.me/api/portraits/men/10.jpg"
    }
  };

  if (!localStorage.getItem("users")) {
    localStorage.setItem("users", JSON.stringify(defaultUsers));
  }

  let currentUser = null;
  let chattingWith = null;
  const adminEmail = "bencasio6666@gmail.com";
  const adminPassword = "177234";

  function showRegister() {
    document.querySelector('.login').classList.add('hidden');
    document.querySelector('.register').classList.remove('hidden');
  }

  function showLogin() {
    document.querySelector('.register').classList.add('hidden');
    document.querySelector('.login').classList.remove('hidden');
  }

  function register() {
    const name = document.getElementById('regName').value.trim();
    const email = document.getElementById('regEmail').value.trim();
    const pass = document.getElementById('regPassword').value.trim();
    const pic = document.getElementById('regPic').value.trim() || `https://i.pravatar.cc/150?u=${email}`;
    if (!name || !email || !pass) return alert("Fill all fields");
    let users = JSON.parse(localStorage.getItem("users") || "{}");
    if (users[email]) return alert("User already exists");
    users[email] = { name, password: pass, pic };
    localStorage.setItem("users", JSON.stringify(users));
    alert("Account created! Please log in.");
    showLogin();
  }

  function login() {
    const email = document.getElementById('email').value.trim();
    const pass = document.getElementById('password').value.trim();
    let users = JSON.parse(localStorage.getItem("users") || "{}");

    if (email === adminEmail && pass === adminPassword) {
      currentUser = email;
      document.querySelector('.login').classList.add('hidden');
      document.querySelector('.admin').classList.remove('hidden');
      renderAdminPanel();
      return;
    }

    if (users[email] && users[email].password === pass) {
      currentUser = email;
      document.querySelector('.login').classList.add('hidden');
      document.querySelector('.home').classList.remove('hidden');
      renderChats();
    } else {
      alert("Invalid login");
    }
  }

  function logoutAdmin() {
    currentUser = null;
    document.querySelector('.admin').classList.add('hidden');
    document.querySelector('.login').classList.remove('hidden');
  }

  function renderAdminPanel() {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    const adminList = document.getElementById('adminList');
    adminList.innerHTML = '';

    for (let email in users) {
      if (email !== adminEmail) {
        const user = users[email];
        const isVerified = user.verified ? "üéñÔ∏è" : "";
        adminList.innerHTML += `
          <div style="margin-bottom: 10px; padding: 10px; background: #1a1a1a; border-radius: 8px;">
            <img src="${user.pic}" style="width:40px;height:40px;border-radius:50%;vertical-align:middle;margin-right:10px;">
            <strong>${user.name}</strong> ${isVerified}<br>
            <small>${email}</small><br>
            <button onclick="toggleVerification('${email}')" style="margin-top: 5px; padding: 6px 12px; border: none; border-radius: 6px; background: #00aaff; color: white;">
              ${user.verified ? "Remove Verification" : "Verify User"}
            </button>
          </div>
        `;
      }
    }
  }

  function toggleVerification(email) {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    if (users[email]) {
      users[email].verified = !users[email].verified;
      localStorage.setItem("users", JSON.stringify(users));
      renderAdminPanel();
    }
  }

  function renderChats() {
    const list = document.getElementById('chatList');
    const search = document.getElementById('searchInput')?.value?.toLowerCase() || "";
    list.innerHTML = '';
    const users = JSON.parse(localStorage.getItem("users") || "{}");

    for (let email in users) {
      if (email !== currentUser) {
        const user = users[email];
        if (user.name.toLowerCase().includes(search)) {
          const verified = user.verified ? " üéñÔ∏è" : "";
          list.innerHTML += `
            <div class="user" onclick="openChat('${email}')">
              <img src="${user.pic}" />
              <div>
                <div class="name">${user.name}${verified}</div>
                <div class="sub">Tap to chat</div>
              </div>
            </div>
          `;
        }
      }
    }
  }

  function openChat(email) {
    chattingWith = email;
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    document.querySelector('.home').classList.add('hidden');
    document.querySelector('.chat').classList.remove('hidden');
    document.getElementById('chatWith').innerText = users[email].name;
    loadMessages();
  }

  function goBack() {
    document.querySelector('.chat').classList.add('hidden');
    document.querySelector('.home').classList.remove('hidden');
  }

  function sendMsg() {
    const input = document.getElementById('msgInput');
    const msg = input.value.trim();
    if (!msg) return;
    const key = `${currentUser}_${chattingWith}`;
    const messages = JSON.parse(localStorage.getItem(key) || "[]");
    messages.push({ from: currentUser, text: msg, time: new Date().toLocaleTimeString() });
    localStorage.setItem(key, JSON.stringify(messages));
    input.value = '';
    loadMessages();
  }

  function loadMessages() {
    const screen = document.getElementById('chatScreen');
    screen.innerHTML = '';
    const key1 = `${currentUser}_${chattingWith}`;
    const key2 = `${chattingWith}_${currentUser}`;
    const msgs1 = JSON.parse(localStorage.getItem(key1) || "[]");
    const msgs2 = JSON.parse(localStorage.getItem(key2) || "[]");
    const all = [...msgs1, ...msgs2].sort((a, b) => new Date('1970/01/01 ' + a.time) - new Date('1970/01/01 ' + b.time));
    for (let msg of all) {
      const mine = msg.from === currentUser;
      screen.innerHTML += `
        <div class="message ${mine ? 'from-me' : 'from-them'}">
          ${msg.text}
          <div class="timestamp">${msg.time}</div>
          ${mine ? '<div class="status">‚úì‚úì</div>' : ''}
        </div>
      `;
    }
    screen.scrollTop = screen.scrollHeight;
  }

  function editProfile() {
    const users = JSON.parse(localStorage.getItem("users") || "{}");
    const user = users[currentUser];
    if (!user) return alert("No user found");

    document.querySelector('.home').classList.add('hidden');
    document.querySelector('.edit-profile').classList.remove('hidden');

    document.getElementById('editName').value = user.name;
    document.getElementById('editPassword').value = user.password;
    document.getElementById('editPic').value = user.pic;
  }

  function saveProfile() {
    const name = document.getElementById('editName').value.trim();
    const password = document.getElementById('editPassword').value.trim();
    const pic = document.getElementById('editPic').value.trim();

    if (!name || !password) return alert("Name and password required");

    const users = JSON.parse(localStorage.getItem("users") || "{}");
    users[currentUser].name = name;
    users[currentUser].password = password;
    users[currentUser].pic = pic || `https://i.pravatar.cc/150?u=${currentUser}`;

    localStorage.setItem("users", JSON.stringify(users));
    alert("Profile updated successfully");

    goBackFromEdit();
    renderChats();
  }

  function goBackFromEdit() {
    document.querySelector('.edit-profile').classList.add('hidden');
    document.querySelector('.home').classList.remove('hidden');
  }
</script>
</body>
</html>
